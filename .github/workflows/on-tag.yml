# Github action to build and deploy the docker image on tag to development environment
name: Build and deploy on tag

on:
  push:
    tags:
      - '*'

jobs:
  build_docker_images:
    name: Build docker images
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Copy environment variables and dockerfile file for production
        run: cp conf/development/.env .env && cp conf/development/Dockerfile Dockerfile

      - name: Copy docker-compose file for production
        run: cp conf/development/docker-compose.deploy.yml docker-compose.yml
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get version from tag
        id: get_version
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: genie
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
      


        